// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TikiSoft.UniversalPaymentGateway.Persistence.Contexts;

namespace TikiSoft.UniversalPaymentGateway.Migrations
{
    [DbContext(typeof(ConfigDbContext))]
    [Migration("20200427010251_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("TikiSoft.UniversalPaymentGateway.Domain.Model.ConfigItem", b =>
                {
                    b.Property<int>("ConfigItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConfigItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Processor")
                        .HasColumnType("TEXT");

                    b.Property<string>("TerminalId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ConfigItemId");

                    b.ToTable("ProcessorConfig");
                });

            modelBuilder.Entity("TikiSoft.UniversalPaymentGateway.Domain.Model.Merchants.Merchant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MerchantID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MerchantInfo");
                });

            modelBuilder.Entity("TikiSoft.UniversalPaymentGateway.Domain.Model.Merchants.MerchantConfigItem", b =>
                {
                    b.Property<int>("ConfigItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConfigItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MerchantId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TerminalId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ConfigItemId");

                    b.HasAlternateKey("MerchantId", "TerminalId", "Processor", "Key");

                    b.ToTable("MerchantConfig");
                });

            modelBuilder.Entity("TikiSoft.UniversalPaymentGateway.Domain.Model.Merchants.MerchantConfigItem", b =>
                {
                    b.HasOne("TikiSoft.UniversalPaymentGateway.Domain.Model.Merchants.Merchant", "Merchant")
                        .WithMany("Config")
                        .HasForeignKey("MerchantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
